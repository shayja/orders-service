# This workflow will build a golang project
name: Go

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  build:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.x"

      - name: Build
        run: go build -v ./...

      - name: Set up .env variables from secrets
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          SSL_MODE: ${{ secrets.SSL_MODE }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          PGADMIN_DEFAULT_EMAIL: ${{ secrets.PGADMIN_DEFAULT_EMAIL }}
          PGADMIN_DEFAULT_PASSWORD: ${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
          TOKEN_TTL: ${{ secrets.TOKEN_TTL }}
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
        run: |
          echo -n "" > .env.test
          echo "DB_HOST=${DB_HOST}" >> .env.test
          echo "DB_PORT=${DB_PORT}" >> .env.test
          echo "DB_USER=${DB_USER}" >> .env.test
          echo "DB_PASSWORD=${DB_PASSWORD}" >> .env.test
          echo "DB_NAME=${DB_NAME}" >> .env.test
          echo "SSL_MODE=${SSL_MODE}" >> .env.test
          echo "POSTGRES_PORT=${POSTGRES_PORT}" >> .env.test
          echo "PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}" >> .env.test
          echo "PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}" >> .env.test
          echo "TOKEN_TTL=${TOKEN_TTL}" >> .env.test
          echo "ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}" >> .env.test
          echo "SERVER_PORT=${SERVER_PORT}" >> .env.test

      - name: Verify .env.test contents (debugging only)
        run: cat .env.test

      - name: Test
        run: go test -v ./...
