basePath: /api/v1
definitions:
  entities.OrderDetail:
    properties:
      created_at:
        type: string
      id:
        type: string
      order_id:
        type: string
      product_id:
        type: string
      quantity:
        type: integer
      total_price:
        type: number
      unit_price:
        type: number
      updated_at:
        type: string
    type: object
  entities.OrderRequest:
    properties:
      order_details:
        items:
          $ref: '#/definitions/entities.OrderDetail'
        type: array
      status:
        type: integer
      total_price:
        type: number
      user_id:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: shayja@gmail.com
    name: Shay Jacoby
    url: https://github.com/shayja/
  description: API documentation for the Orders microservice.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Orders Microservice
  version: "1.0"
paths:
  /order:
    get:
      description: Retrieve a paginated list of all orders
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - apiKey: []
      summary: Get all orders
      tags:
      - Orders
    post:
      description: Add a new order
      parameters:
      - description: Order data
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/entities.OrderRequest'
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - apiKey: []
      summary: Create a new order
      tags:
      - Orders
  /order/{id}:
    get:
      description: Retrieve order details by order ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - apiKey: []
      summary: Get an order by ID
      tags:
      - Orders
  /order/{id}/status:
    put:
      description: Update the status of an order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: New status
        in: body
        name: status
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - apiKey: []
      summary: Update order status
      tags:
      - Orders
schemes:
- http
- https
securityDefinitions:
  apiKey:
    description: Type "Bearer" followed by a space and JWT token. Please add it in
      the format "Bearer {AccessToken}" to authorize your requests.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
