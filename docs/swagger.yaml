basePath: /api/v1
definitions:
  entities.Order:
    properties:
      created_at:
        description: |-
          The date and time the order was created
          example: 2024-07-01T12:00:00Z
        example: "2024-07-01T12:00:00Z"
        minLength: 20
        type: string
      id:
        description: |-
          The UUID of a product
          example: 6204037c-30e6-408b-8aaa-dd8219860b4b
        example: 6204037c-30e6-408b-8aaa-dd8219860b4b
        minLength: 36
        type: string
      status:
        description: |-
          The status of the order (1=created/pending, 2=processing, 3=completed, 4=cancelled)
          example: 2
          required: true
        example: 1
        format: int32
        minimum: 1
        type: integer
      total_price:
        description: |-
          The total price of the order
          example: 100.00
          required: true
        example: 100
        format: float64
        type: number
      updated_at:
        description: |-
          The date and time the order was last updated
          example: 2025-01-01T12:00:00Z
        type: string
      user_id:
        description: |-
          The user that created the order
          example: 451fa817-41f4-40cf-8dc2-c9f22aa98a4f
          required: true
        example: 451fa817-41f4-40cf-8dc2-c9f22aa98a4f
        minLength: 36
        type: string
    type: object
  entities.OrderDetail:
    properties:
      created_at:
        description: |-
          The date and time the order detail was created
          example: 2025-01-01T12:00:00Z
        type: string
      id:
        description: |-
          The UUID of an order detail (line item)
          example: 6204037c-30e6-408b-8aaa-dd8219860b4b
        type: string
      order_id:
        description: |-
          The UUID of the related order.
          example: 451fa817-41f4-40cf-8dc2-c9f22aa98a4f
          required: true
        example: 451fa817-41f4-40cf-8dc2-c9f22aa98a4f
        minLength: 36
        type: string
      product_id:
        description: |-
          The UUID of the related product
          example: 063d0ff7-e17e-4957-8d92-a988caeda8a1
          required: true
        example: 063d0ff7-e17e-4957-8d92-a988caeda8a1
        minLength: 36
        type: string
      quantity:
        description: |-
          The quantity of the product
          example: 2
          required: true
        example: 1
        format: int32
        minimum: 1
        type: integer
      total_price:
        description: |-
          The date and time the order detail was created
          example: 2024-07-01T12:00:00Z
          required: true
        example: 55
        format: float64
        type: number
      unit_price:
        description: |-
          The unit price of the product
          example: 50.00
          required: true
        example: 50
        format: float64
        type: number
      updated_at:
        description: |-
          The date and time the order detail was last updated
          example: 2025-01-01T12:00:00Z
        example: "2024-07-01T12:00:00Z"
        minLength: 20
        type: string
    type: object
  entities.OrderRequest:
    properties:
      order_details:
        description: |-
          Array of the order line items.
          example: [{"product_id":"6204037c-30e6-408b-8aaa-dd8219860b4b","quantity":2,"unit_price":50.00}]
          required: true
        items:
          $ref: '#/definitions/entities.OrderDetail'
        type: array
      status:
        description: |-
          The status of the order (1=created/pending, 2=processing, 3=completed, 4=cancelled)
          example: 1
          required: true
        example: 1
        format: int32
        minimum: 1
        type: integer
      total_price:
        description: |-
          The total price of the order
          example: 100.00
          required: true
        example: 100
        format: float64
        type: number
      user_id:
        description: |-
          The user that creates the order
          example: 451fa817-41f4-40cf-8dc2-c9f22aa98a4f
          required: true
        example: 063d0ff7-e17e-4957-8d92-a988caeda8a1
        minLength: 36
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: shayja@gmail.com
    name: Shay Jacoby
    url: https://github.com/shayja/
  description: API documentation for the Orders microservice.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Orders Microservice
  version: "1.0"
paths:
  /order:
    get:
      description: Responds with the list of user orders as JSON.
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Order'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - apiKey: []
      summary: Get orders (array) by the user ID
      tags:
      - Orders
    post:
      description: Add a new order
      parameters:
      - description: Order data
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/entities.OrderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - apiKey: []
      summary: Create and store a new order in the database.
      tags:
      - Orders
  /order/{id}:
    get:
      description: Responds with an entity of order as JSON.
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Order'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - apiKey: []
      summary: Get an order by order ID
      tags:
      - Orders
  /order/{id}/status:
    put:
      description: Update the status of an order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: New status
        in: body
        name: status
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      security:
      - apiKey: []
      summary: Update order status
      tags:
      - Orders
schemes:
- http
- https
securityDefinitions:
  apiKey:
    description: Type "Bearer" followed by a space and JWT token. Please add it in
      the format "Bearer {AccessToken}" to authorize your requests.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
